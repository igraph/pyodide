From ba4a069708bca4ff06f743f24e0144d8d16ab6c0 Mon Sep 17 00:00:00 2001
From: Tamas Nepusz <ntamas@gmail.com>
Date: Mon, 10 Jul 2023 16:14:25 +0200
Subject: [PATCH 1/3] fix: fix a memory leak in Graph.decompose()

---
 src/_igraph/convert.c     | 8 +++-----
 src/_igraph/graphobject.c | 9 +++++----
 2 files changed, 8 insertions(+), 9 deletions(-)

diff --git a/src/_igraph/convert.c b/src/_igraph/convert.c
index a8a46ab5..a3a7f28e 100644
--- a/src/_igraph/convert.c
+++ b/src/_igraph/convert.c
@@ -2516,11 +2516,9 @@ PyObject* igraphmodule_vector_int_list_t_to_PyList_of_tuples(const igraph_vector
  * \ingroup python_interface_conversion
  * \brief Converts an \c igraph_graph_list_t into a Python list of graphs
  *
- * This function transfers ownership of the graphs to Python and frees the pointers
- * to them. If it fails, you can call \c igraph_graph_list_destroy if you have to.
- * If successful, do nothing and especially do *not* destroy the list, because that
- * will destroy each graph inside, which in turns destroys the vertices and edges
- * data structures that are now supposedly managed by Python.
+ * This function transfers ownership of the graphs to Python and empties the
+ * graph list in parallel. You can (and should) call \c igraph_graph_list_destroy
+ * regularly after the conversion is done.
  *
  * \param v the \c igraph_graph_list_t containing the list to be converted; the
  *     list will become empty after executing this function
diff --git a/src/_igraph/graphobject.c b/src/_igraph/graphobject.c
index f27b7414..23f66636 100644
--- a/src/_igraph/graphobject.c
+++ b/src/_igraph/graphobject.c
@@ -4827,16 +4827,17 @@ PyObject *igraphmodule_Graph_decompose(igraphmodule_GraphObject * self,
     return NULL;
   }
 
-  /* We have to create a Python igraph object for every graph returned */
-  /* Pointers to each graph are freed, but the graphs themselves are not
-   * destroyed because the Python class takes over ownership of them,
-   * in particular of edges and vertices */
+  /* We have to create a Python igraph object for every graph returned. During
+   * the conversion, the graph list will be emptied as the Python list we return
+   * from the conversion function takes ownership of all the graphs */
   list = igraphmodule_graph_list_t_to_PyList(&components, Py_TYPE(self));
   if (!list) {
       igraph_graph_list_destroy(&components);
       return 0;
   }
 
+  igraph_graph_list_destroy(&components);
+
   return list;
 }
 
-- 
2.41.0

